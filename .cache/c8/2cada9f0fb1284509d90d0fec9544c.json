{"id":"js/app.js","dependencies":[{"name":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\package.json","includedInParent":true,"mtime":1574674775062},{"name":"../css/loader.css","loc":{"line":1,"column":7},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\css\\loader.css"},{"name":"../css/style.css","loc":{"line":2,"column":7},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\css\\style.css"},{"name":"../css/navbar.css","loc":{"line":3,"column":7},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\css\\navbar.css"},{"name":"./fetchSheetsLength","loc":{"line":5,"column":28},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\fetchSheetsLength.js"},{"name":"./scrollAlarm","loc":{"line":6,"column":24},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\scrollAlarm.js"},{"name":"./exportToWords","loc":{"line":7,"column":23},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\exportToWords.js"},{"name":"./makeTable","loc":{"line":8,"column":23},"parent":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\app.js","resolved":"C:\\Users\\user\\Desktop\\projects\\amost-finished-NEVER-DELEVE\\words-level-project\\js\\makeTable.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"../css/loader.css\");\n\nrequire(\"../css/style.css\");\n\nrequire(\"../css/navbar.css\");\n\nvar _fetchSheetsLength = _interopRequireDefault(require(\"./fetchSheetsLength\"));\n\nvar _scrollAlarm = _interopRequireDefault(require(\"./scrollAlarm\"));\n\nvar _exportToWords = _interopRequireDefault(require(\"./exportToWords\"));\n\nvar _makeTable = _interopRequireDefault(require(\"./makeTable\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar myData = [];\nvar posts = {\n  postPerpage: 10,\n  currentPage: 0,\n  results: null,\n  currentDay: 0\n}; // let firstLoad = true;\n\nvar prev = document.querySelector('.previous');\nvar next = document.querySelector('.next');\nvar printBtn = document.querySelector('.printer');\nvar exportContent = document.getElementById('exportContent');\nwindow.addEventListener('load', init);\nwrapper.addEventListener('scroll', _scrollAlarm.default);\n\nfunction init(e) {\n  // Grid wrapper displaying message\n  var div = document.createElement('div');\n  div.setAttribute('class', 'message wrapper'); // div.innerText = 'Press start button';\n\n  wrapper.appendChild(div); // Start button\n\n  var button = document.createElement('button');\n  button.type = button;\n  button.setAttribute('class', 'start');\n  button.textContent = \"Start Study\";\n  button.addEventListener('click', function () {\n    return (0, _fetchSheetsLength.default)(loadJSON);\n  });\n  wrapper.appendChild(button); // Game element\n\n  var game = document.createElement('div');\n  game.classList.add('game');\n  wrapper.insertBefore(game, document.querySelector('.index'));\n}\n\nfunction loadJSON(sheetLength) {\n  var urls = [];\n  var sheetID = '1mgbYLvqlZ9FIRFbiIhg6C4SQZtHihCOME7f5m49Ze84';\n\n  for (var sheetNum = 1; sheetNum <= sheetLength; sheetNum++) {\n    var jsonURL = \"https://spreadsheets.google.com/feeds/list/\".concat(sheetID, \"/\").concat(sheetNum, \"/public/values?alt=json\");\n    urls = [].concat(_toConsumableArray(urls), [jsonURL]);\n  }\n\n  Promise.all(urls.map(function (url) {\n    return fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var tempArr = [];\n      var sheetName = data.feed.title.$t;\n      data.feed.entry.forEach(function (item) {\n        var holder = {};\n\n        for (var key in item) {\n          if (key.substring(4) === 'english') {\n            holder.en = item[key].$t;\n          } else if (key.substring(4) === 'korean') {\n            holder.ko = item[key].$t;\n          }\n        }\n\n        tempArr = [].concat(_toConsumableArray(tempArr), [holder]);\n      });\n      return tempArr;\n    });\n  })).then(function (result) {\n    posts.results = result;\n    loadPage(0, posts.results);\n    document.querySelector('.loader').style.display = 'none';\n  });\n}\n\nfunction loadPage(page) {\n  document.querySelector('.game').innerHTML = '';\n  posts.currentPage = page;\n  document.querySelector('.numday').innerHTML = parseInt(posts.currentPage) + 1; // if (firstLoad) {\n  //     document.querySelector('.numday').innerHTML = parseInt(posts.currentPage) + 1;\n  //     firstLoad = false;\n  // } else {\n  //     document.querySelector('.numday').innerHTML = parseInt(posts.currentPage);\n  // }\n\n  document.querySelector('.index').classList.remove('hidden');\n  document.querySelector('.start').style.display = 'none';\n  loadNav();\n  loadNumbers();\n  var myWords = shuffle(posts.results[page]);\n  var game = document.querySelector('.game');\n  myWords.forEach(function (word) {\n    var box = document.createElement('div');\n    box.classList.add('box');\n    box.classList.add('tooltip-message');\n    box.setAttribute('data-tooltip-message', word.en);\n    box.innerText = word.en;\n    box.addEventListener('mouseenter', function (e) {\n      box.style.backgroundColor = \"#4CAF50\";\n      box.innerText = word.ko;\n      loadTooltips(e);\n    });\n    box.addEventListener('mouseleave', function (e) {\n      box.style.backgroundColor = '#3b5998';\n      box.innerText = word.en;\n      var tooltipOutput = document.querySelector('.tooltip-output');\n      tooltipOutput.style.display = 'none';\n    });\n    game.appendChild(box);\n  });\n\n  function add(a) {\n    return a + 10;\n  }\n\n  function loadTooltips(event) {\n    var tooltips = document.querySelectorAll('.tooltip-message');\n    var tooltipOutput = document.querySelector('.tooltip-output');\n    var myInterval; // clearInterval(myInterval);\n\n    tooltipOutput.style.display = 'block';\n    tooltipOutput.style.top = event.clientY + 5 + \"px\";\n    tooltipOutput.style.left = event.clientX + 5 + \"px\";\n    tooltipOutput.innerHTML = event.target.getAttribute(\"data-tooltip-message\");\n  }\n}\n\nfunction loadNumbers() {\n  var numbers = document.querySelector('.numbers');\n  numbers.innerHTML = '';\n  posts.results.forEach(function (item, i) {\n    var span = document.createElement('span');\n    span.classList.add('number');\n    span.textContent = i + 1;\n    span.addEventListener('click', function (e) {\n      numbers.innerHTML = '';\n      document.querySelector('.game').innerHTML = '';\n      loadPage(parseInt(this.textContent) - 1);\n      posts.currentDay = this.textContent;\n    });\n\n    if (i + 1 == posts.currentPage + 1) {\n      span.classList.add('active');\n    }\n\n    numbers.appendChild(span); // if ((parseInt(this.textContent) - 1) == posts.currentPage) {\n    //     this.classList.add('isActive');\n    // }\n  });\n}\n\nfunction loadNav() {\n  document.querySelector('.navbar').classList.remove('hidden');\n  document.querySelector('.day').innerHTML = \"<span class=\\\"day\\\">DAY-\".concat(parseInt(posts.currentPage) + 1, \"</spanclass> in \").concat(posts.results.length);\n  document.querySelector('.openbtn').addEventListener('click', function (e) {\n    document.getElementById('mySidenav').style.width = '300px';\n  });\n  document.querySelector('.closebtn').addEventListener('click', function (e) {\n    document.getElementById('mySidenav').style.width = '0';\n  }, false);\n  document.body.addEventListener('mouseleave', function (e) {\n    document.getElementById('mySidenav').style.width = '0';\n  });\n  document.querySelector('.shuffleWords').addEventListener('click', function (e) {\n    document.querySelector('.game').innerHTML = '';\n    loadPage(posts.currentPage);\n    document.getElementById('mySidenav').style.width = '0';\n  });\n}\n\nprev.addEventListener('click', function (e) {\n  if (posts.currentPage <= 0) {\n    alert('Hey, No Negative Pages!');\n    return;\n  } else {\n    document.querySelector('.game').innerHTML = '';\n    posts.currentPage--;\n    loadPage(posts.currentPage);\n  }\n});\nnext.addEventListener('click', function (e) {\n  if (posts.currentPage + 1 >= posts.results.length) {\n    alert('No More Pages!');\n    return;\n  } else {\n    document.querySelector('.game').innerHTML = '';\n    posts.currentPage++;\n    loadPage(posts.currentPage);\n    console.log(posts.currentPage);\n  }\n});\nprintBtn.addEventListener('click', function (e) {\n  makeTwoCopies(e);\n});\n\nfunction shuffle(arr) {\n  var n = arr.length;\n\n  for (var i = n - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n\n  return arr;\n}\n\nfunction makeTwoCopies(event) {\n  makeWordContent(event, \"white\");\n  makeWordContent(event, \"black\");\n}\n\nfunction makeWordContent(event, color) {\n  var numDay = document.querySelector('.numday').textContent;\n  var index = parseInt(numDay) - 1;\n  var dayWords = posts.results[index];\n  exportContent.innerHTML = \"<h3\\n                                    style=\\\"text-align: center\\\"\\n                                >\\n                                    Day-\".concat(index + 1, \" TEST;\\n                                </h3><br>\");\n  var tableHTML = \"<table style=\\\"border: 1px solid black; border-collapse: collapse\\\">\\n                        <tr>\\n                            <td \\n                                style=\\\"border: 1px solid black;\\n                                       font-weight: bold;\\n                                       text-align: center;\\n                                       color: black \\n                                \\\">\\n                                English\\n                                </td> \\n                            <td \\n                                style=\\\"border: 1px solid black;\\n                                       font-weight: bold;\\n                                       text-align: center;\\n                                       color: black;\\n                                \\\">\\n                                Korean\\n                                </td> \\n                        </tr> \\n                    \";\n  var tableData = '';\n\n  for (var i = 0; i < dayWords.length; i++) {\n    var data = \"<tr\\\">\\n                        <td \\n                            style=\\\" border: 1px solid black;\\n                                    color: black;  \\n                                   \\\"\\n                          >\\n                            \".concat(i + 1, \". \").concat(dayWords[i].en, \"</td>\\n                        <td \\n                            style=\\\" border: 1px solid black;\\n                                    color: \").concat(color, \";  \\n                                   \\\"\\n                           >\\n                            \").concat(dayWords[i].ko, \"</td>\\n                     </tr>\\n                     \");\n    tableData += data;\n  }\n\n  tableHTML += tableData + '</table>';\n  exportContent.innerHTML += tableHTML;\n  (0, _exportToWords.default)('exportContent', \"day-\".concat(index + 1, \".test\"));\n  exportContent.innerHTML = '';\n}"},"sourceMaps":null,"error":null,"hash":"feafe3226ec201e9b19c33ff0f6707d2","cacheData":{"env":{}}}